<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/batch 
                http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<import resource="../config/database.xml"/>    
	<import resource="../config/context.xml"/>     
	
	<!-- Readers Bean declaration -->  
	<bean id="cityReader" class="com.zenika.custom.readers.CityItemReader">
    	<property name="resource" value="classpath:csv/cities.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="ville_id,ville_departement,ville_slug,ville_nom,ville_nom_reel,ville_nom_soundex,ville_nom_metaphone,
						ville_code_postal,ville_commune,ville_code_commune,ville_arrondissement,ville_canton,ville_amdi,ville_population_2010,
						ville_population_1999,ville_population_2012,ville_densite_2010,ville_surface,ville_longitude_deg,ville_latitude_deg,ville_longitude_grd,
						ville_latitude_grd,ville_longitude_dms,ville_latitude_dms,ville_zmin,ville_zmax,ville_population_2010_order_france,
						ville_densite_2010_order_france,ville_surface_order_france"/>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.zenika.custom.mappers.CityFieldSetMapper" />
				</property>
			</bean>
		</property>
    </bean>
    
    <bean id="mapppingFileReader" class="com.zenika.custom.readers.MetropolisItemReader">
    	<property name="resource" value="classpath:csv/mapping.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="cityCode,cityLabel,metropolisCode,metropolisLabel,metropolisType" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.zenika.custom.mappers.MetropolisFieldSetMapper" />
				</property>
			</bean>
		</property>
    </bean>
    
    <bean id="trashCenterFileReader" class="com.zenika.custom.readers.TrashItemReader">
    	<property name="resource" value="classpath:csv/decheteries.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/>
						<property name="names" value="trashCenterId,cityCode,trashCenterUsualName,trashAdministratorName,trashOpeningState,openingDate,
						closingDate,waste1,waste2,waste3" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.zenika.custom.mappers.TrashCenterFieldSetMapper" />
				</property>
			</bean>
		</property>
    </bean>
    
    <bean id="trashBinFileReader" class="com.zenika.custom.readers.TrashItemReader">
    	<property name="resource" value="classpath:csv/pav.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/>
						<property name="names" value="numpav,codeinsee,localisati,typepav,domaine,entourag,naturesol,datemaj,flux,x_cc48,y_cc48,longitude,latitude" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.zenika.custom.mappers.TrashBinFieldSetMapper" />
				</property>
			</bean>
		</property>
    </bean>
    
    <bean id="itemFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
    	<property name="resource" value="classpath:csv/items.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/>
						<property name="names" value="name,barcode,image,constituents,tags" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.zenika.custom.mappers.ItemFieldSetMapper" />
				</property>
			</bean>
		</property>
    </bean>
    
    <bean id="wasteFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
    	<property name="resource" value="classpath:csv/wastes.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";"/>
						<property name="names" value="name,acronym,description" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.zenika.custom.mappers.WasteFieldSetMapper" />
				</property>
			</bean>
		</property>
    </bean>
    

    <!-- Processors Bean Declaration -->
    <bean id="cityProcessor" class="com.zenika.custom.processors.CityItemProcessor" />
    <bean id="metropolisProcessor" class="com.zenika.custom.processors.MetropolisItemProcessor" />
    <bean id="trashCenterProcessor" class="com.zenika.custom.processors.TrashCenterItemProcessor" />
    <bean id="itemProcessor" class="com.zenika.custom.processors.ProductItemProcessor" />
    <bean id="wasteProcessor" class="com.zenika.custom.processors.WasteItemProcessor" />
    
    
    <!-- Writers Bean declaration -->
    <bean id="cityWriter" class="com.zenika.custom.writers.CityItemWriter" />
    <bean id="metropolisWriter" class="com.zenika.custom.writers.MetropolisItemWriter" />
    <bean id="trashCenterWriter" class="com.zenika.custom.writers.TrashCenterItemWriter" />
    <bean id="trashBinWriter" class="com.zenika.custom.writers.TrashCenterItemWriter" />
    <bean id="itemWriter" class="com.zenika.custom.writers.ProductItemWriter" />
    <bean id="wasteWriter" class="com.zenika.custom.writers.WasteItemWriter" />
    
    
    <!-- Batch Job Declarations -->
    <batch:job id="loadDatatJob"> 
		<batch:step id="loadCities" next="loadMetropolises">
			<batch:tasklet>
				<batch:chunk reader="cityReader" processor="cityProcessor" writer="cityWriter" commit-interval="37000"/>
			</batch:tasklet>
		</batch:step>
		<batch:step id="loadMetropolises" next="loadTrashCenters">
			<batch:tasklet>
				<batch:chunk reader="mapppingFileReader" processor="metropolisProcessor" writer="metropolisWriter" commit-interval="37000"/>
			</batch:tasklet>
		</batch:step> 
		<batch:step id="loadTrashCenters" next="loadTrashBins">
			<batch:tasklet>
				<batch:chunk reader="trashCenterFileReader" processor="trashCenterProcessor" writer="trashCenterWriter" commit-interval="30"/>
			</batch:tasklet>
		</batch:step>
		<batch:step id="loadTrashBins" next="loadItems">
			<batch:tasklet>
				<batch:chunk reader="trashBinFileReader" processor="trashCenterProcessor" writer="trashBinWriter" commit-interval="3000"/>
			</batch:tasklet>
		</batch:step>
		<batch:step id="loadItems" next="loadWastes">
			<batch:tasklet>
				<batch:chunk reader="itemFileReader" processor="itemProcessor" writer="itemWriter" commit-interval="10"/>
			</batch:tasklet>
		</batch:step>
		<batch:step id="loadWastes">
			<batch:tasklet>
				<batch:chunk reader="wasteFileReader" processor="wasteProcessor" writer="wasteWriter" commit-interval="10"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
           
                
</beans>